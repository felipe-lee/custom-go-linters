#! /usr/bin/env bash

##########################################
# DO NOT MAKE LOCAL CHANGES TO THIS FILE #
#                                        #
# Vars in this file can be overridden by #
# exporting them in .envrc.local         #
##########################################

# Add local paths for binaries and scripts
PATH_add ./bin
PATH_add ./scripts

# Check all variables declared as required. If any are missing, print a message and
# exit with a non-zero status.
check_required_variables() {
  missing_var=false

  for i in "${!required_vars[@]}"; do
    var=${required_vars[i]}
    if [[ -z "${!var:-}" ]]; then
      log_status "${var} is not set: ${var_docs[i]}"
      missing_var=true
    fi
  done

  if [[ $missing_var == "true" ]]; then
    log_error "Your environment is missing some variables!"
    log_error "Set the above variables in .envrc.local and try again."
  fi
}

#########################
# Project Configuration #
#########################

# Capture the root directory of the project. This works even if someone `cd`s
# directly into a subdirectory.
MYMOVE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export MYMOVE_DIR

# Set golangci-lint concurrency env variable
export GOLANGCI_LINT_CONCURRENCY=6
# Set golangci-lint verbosity if value is "-v"
export GOLANGCI_LINT_VERBOSE=""


#### Nix Experiment Start ####
# if nix is installed, use it
if [ ! -r .nix-disable  ] && has nix-env; then
  # set NIX_PROFILE so nix-env operations don't need to manually
  # specify the profile path
  export NIX_PROFILE=/nix/var/nix/profiles/custom-go-linters

  nix_dir="nix"
  # add the nix files so that if they change, direnv needs to be reloaded
  watch_file "${nix_dir}"/*.nix
  config_hash=$(nix-hash "${nix_dir}")
  store_hash=$(nix-store -q --hash "${NIX_PROFILE}")

  # The .nix-hash file is created by nix/update.sh
  if [ ! -r .nix-hash ] || ! grep -q "${config_hash}-${store_hash}" .nix-hash; then
    log_status "WARNING: nix packages out of date. Run ${nix_dir}/update.sh"
  fi

  # add the NIX_PROFILE bin path so that everything we just installed
  # is available on the path
  PATH_add ${NIX_PROFILE}/bin

  # nix is immutable, so we need to specify a path for local changes, e.g.
  # binaries can be installed local to this project
  export GOPATH=$PWD/.gopath
  PATH_add ./.gopath/bin
fi


#### Nix Experiment End ######

##############################################
# Load Local Overrides and Check Environment #
##############################################

# Load a local overrides file. Any changes you want to make for your local
# environment should live in that file.

if [ -e .envrc.local ]
then
  source_env .envrc.local
fi

# Check that all required environment variables are set
check_required_variables
